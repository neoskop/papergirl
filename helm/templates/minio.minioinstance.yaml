{{- if and .Values.minio.createCluster (lt (int .Values.minio.version) 4) -}}
{{- if ge (int .Values.minio.version) 2 -}}
apiVersion: operator.min.io/v1
kind: MinIOInstance
{{- else -}}
apiVersion: miniocontroller.min.io/v1beta1
kind: MinIOInstance
{{- end }}
metadata:
  name: {{ include "papergirl.minio.name" . }}
  labels:
{{ include "papergirl.labels" . | indent 4 }}
spec:
  metadata:
    labels:
      app.kubernetes.io/name: {{ include "papergirl.minio.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
    annotations:
      prometheus.io/path: /minio/prometheus/metrics
      prometheus.io/port: "9000"
      prometheus.io/scrape: "true"
  image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
  imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
  {{- if .Values.imagePullSecret }}
  imagePullSecret: 
  - name: {{ include "papergirl.pull-secret-name" . }}
  {{- end }}
  credsSecret:
    name: {{ include "papergirl.minio.name" . }}-credentials
{{- if ge (int .Values.minio.version) 2 }}
  zones:
    - name: "zone-0"
      servers: {{ .Values.minio.replicaCount }}
  volumesPerServer: 1
  mountPath: /export
{{- else -}}
  replicas: {{ .Values.minio.replicaCount }}
{{- end }}
  podManagementPolicy: Parallel
  requestAutoCert: false
  certConfig:
    commonName: ""
    organizationName: []
    dnsNames: []
  env:
    - name: MINIO_BROWSER
      value: "on"
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
  liveness:
    httpGet:
      path: /minio/health/live
      port: 9000
    initialDelaySeconds: 120
    periodSeconds: 20
  volumeClaimTemplate:
    metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: {{ .Values.minio.storageClass }}
      resources:
        requests:
          storage: {{ .Values.minio.storageSize }}
{{- end }}