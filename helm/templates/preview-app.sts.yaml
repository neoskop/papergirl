{{- if .Values.papergirlPreview.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "papergirl.preview.name" . }}
  labels:
{{ include "papergirl.labels" . | indent 4 }}
spec:
  serviceName: "papergirl"
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 1
  volumeClaimTemplates:
    - metadata:
        name: website-cache
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.websiteCache.storageClass }}
        resources:
          requests:
            storage: {{ .Values.websiteCache.size }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "papergirl.preview.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "papergirl.preview.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        {{- end }}
    spec:
      {{- if .Values.imagePullSecret }}
      imagePullSecrets: 
      - name: {{ include "papergirl.pull-secret-name" . }}
      {{- end }}
      shareProcessNamespace: true
      volumes:
      {{- if .Values.develop }}
        - name: local-dir 
          hostPath:
            path: /papergirl
            type: Directory
      {{- end }}
        - name: config
          configMap:
            name: {{ include "papergirl.preview.name" . }}-config
        - name: nginx-config
          configMap:
            name: {{ include "papergirl.preview.name" . }}-nginx-config
      initContainers:
        {{- if .Values.minio.createCluster  }}
        - name: connection-check
          image: "{{ .Values.connectionCheck.image.repository }}:{{ .Values.connectionCheck.image.tag }}"
          imagePullPolicy: {{ .Values.connectionCheck.image.pullPolicy }}
          env:
            - name: ENDPOINT
              value: {{ include "papergirl.s3.endpoint" . }}
          command:
            - sh
            - -c
            - while ! nc -z $ENDPOINT 9000; do echo 'Wait for MinIO startup...' && sleep 1; done
          resources:
            {{- toYaml .Values.connectionCheck.resources | nindent 12 }}
        {{- end }}
        - name: volume-setup
          image: "{{ .Values.volumeSetup.image.repository }}:{{ .Values.volumeSetup.image.tag }}"
          imagePullPolicy: {{ .Values.volumeSetup.image.pullPolicy }}
          command: ['sh', '-c', 'cd /home/papergirl/nginx && mkdir -p pid && mkdir -p conf.d && mkdir -p sites.d && mkdir -p redirects.d && mkdir -p www/black && mkdir -p www/red && echo "root /home/papergirl/nginx/www/black;" > conf.d/root.conf && echo "error_page 404 /404/index.html;" > conf.d/errors.conf && chown -R 33 .']
          volumeMounts:
            - name: website-cache
              mountPath: /home/papergirl/nginx
          resources:
            {{- toYaml .Values.volumeSetup.resources | nindent 12 }}
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          securityContext:
            runAsUser: 33
            runAsGroup: 33
          volumeMounts:
            - name: nginx-config
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: "nginx.conf"
            - name: website-cache
              mountPath: /home/papergirl/nginx
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx", "-s", "quit"]
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
        - name: papergirl
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONFIG
              value: kubernetes
          volumeMounts:
          {{- if .Values.develop }}
            - name: local-dir
              mountPath: /home/papergirl/app/src
              subPath: src
          {{- end }}
            - name: config
              mountPath: /home/papergirl/app/config/kubernetes.env
              subPath: "kubernetes.env"
            - name: website-cache
              mountPath: /home/papergirl/nginx
          ports:
            - name: papergirl-http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /probe/liveness
              port: papergirl-http
            failureThreshold: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /probe/readiness
              port: papergirl-http
            periodSeconds: 5
            failureThreshold: 10
          startupProbe:
            httpGet:
              path: /probe/startup
              port: papergirl-http
            failureThreshold: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: dnsmasq
          image: "{{ .Values.dnsmasq.image.repository }}:{{ .Values.dnsmasq.image.tag }}"
          imagePullPolicy: {{ .Values.dnsmasq.image.pullPolicy }}
          args:
            - --listen
            - "127.0.0.1:53"
            - --default-resolver
            - --enable-search
            - --hostsfile=/etc/hosts
          resources:
            {{- toYaml .Values.dnsmasq.resources | nindent 12 }}
        {{- if .Values.prometheus.enabled }}
        - name: nginx-prometheus-exporter
          image: "{{ .Values.prometheus.nginxExporterImage.repository }}:{{ .Values.prometheus.nginxExporterImage.tag }}"
          imagePullPolicy: {{ .Values.prometheus.nginxExporterImage.pullPolicy }}
          livenessProbe:
            tcpSocket:
              port: stats
            initialDelaySeconds: 15
          ports:
            - name: stats
              containerPort: 9113
              protocol: TCP
          command:
            - /bin/ash
            - -c
            - "sleep 10 && /usr/bin/exporter $@"
          args:
            - -nginx.scrape-uri
            - http://localhost:8082/stub_status
          resources:
            requests:
              memory: 10Mi
              cpu: "0.01"
            limits:
              memory: 24Mi
              cpu: "0.01"
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
    {{- else }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key:  app.kubernetes.io/name
                operator: In
                values:
                - {{ include "papergirl.preview.name" . }}
            topologyKey: "kubernetes.io/hostname"
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
